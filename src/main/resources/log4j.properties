# Define some default values that can be overridden by system properties
hadoop.root.logger=INFO,console
hadoop.security.logger=INFO,console
hadoop.log.dir=${user.home}/mapr-logs/hadoop/hadoop-0.20.2
hadoop.log.file=hadoop.log

#
# Job Summary Appender 
#
# Use following logger to send summary to separate file defined by 
# hadoop.mapreduce.jobsummary.log.file rolled daily:
# hadoop.mapreduce.jobsummary.logger=INFO,JSA
# 
hadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}
hadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log

# Define the root logger to the system property "hadoop.root.logger".
log4j.rootLogger=${hadoop.root.logger}, EventCounter

# Logging Threshold
log4j.threshhold=ALL

#
# Daily Rolling File Appender
#

log4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender
log4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}

# Rollver at midnight
log4j.appender.DRFA.DatePattern=.yyyy-MM-dd

# 30-day backup
#log4j.appender.DRFA.MaxBackupIndex=30
log4j.appender.DRFA.layout=org.apache.log4j.PatternLayout

# Pattern format: Date LogLevel LoggerName LogMessage
log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c{2} [%t]: %m%n
# Debugging Pattern format
#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n


#
# console
# Add "console" to rootlogger above if you want to use this 
#

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n

#
# TaskLog Appender
#
# MAPREDUCE-2372 TaskLogAppender mechanism shouldn't be set in log4j.properties
#Default values
#hadoop.tasklog.taskid=null
#hadoop.tasklog.iscleanup=false
#hadoop.tasklog.noKeepSplits=4
#hadoop.tasklog.totalLogFileSize=100
#hadoop.tasklog.purgeLogSplits=true
#hadoop.tasklog.logsRetainHours=12

log4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender
#log4j.appender.TLA.taskId=${hadoop.tasklog.taskid}
#log4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}
#log4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}

log4j.appender.TLA.layout=org.apache.log4j.PatternLayout
log4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c{2} [%t]: %m%n

#
#Security audit appender
#
hadoop.security.log.file=SecurityAuth.audit
log4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}

log4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout
log4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n
#new logger
log4j.category.SecurityLogger=${hadoop.security.logger}

#
# Rolling File Appender
#

#log4j.appender.RFA=org.apache.log4j.RollingFileAppender
#log4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}

# Logfile size and and 30-day backups
#log4j.appender.RFA.MaxFileSize=1MB
#log4j.appender.RFA.MaxBackupIndex=30

#log4j.appender.RFA.layout=org.apache.log4j.PatternLayout
#log4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n
#log4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n

#
# FSNamesystem Audit logging
# All audit events are logged at INFO level
#
log4j.logger.org.apache.hadoop.fs.FSNamesystem.audit=WARN

# Custom Logging levels

log4j.logger.org.apache.hadoop.security.JniBasedUnixGroupsMapping=WARN
log4j.logger.org.apache.hadoop.util.NativeCodeLoader=WARN
log4j.logger.org.apache.hadoop.mapred.JobTracker=INFO
log4j.logger.org.apache.hadoop.mapred.TaskTracker=INFO
log4j.logger.org.apache.hadoop.mapred.JobClient=INFO
log4j.logger.org.apache.zookeeper=ERROR
log4j.logger.org.apache.hadoop.mapred.MapTask=WARN
log4j.logger.org.apache.hadoop.mapred.ReduceTask=WARN
#log4j.logger.org.apache.hadoop.mapred.JobSchedulable=DEBUG
#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG


# Jets3t library
log4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR

#
# Event Counter Appender
# Sends counts of logging messages at different severity levels to Hadoop Metrics.
#
log4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter

#
# Job Summary Appender
#
log4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender
log4j.appender.JSA.File=${hadoop.log.dir}/${hadoop.mapreduce.jobsummary.log.file}
log4j.appender.JSA.layout=org.apache.log4j.PatternLayout
log4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n
log4j.appender.JSA.DatePattern=.yyyy-MM-dd
log4j.logger.org.apache.hadoop.mapred.JobInProgress$JobSummary=${hadoop.mapreduce.jobsummary.logger}
log4j.additivity.org.apache.hadoop.mapred.JobInProgress$JobSummary=false



###############################################################################
#                      MapR-FS Central Logging                                #
###############################################################################

log4j.debug=false

maprfs.uri=maprfs:///

# make sure that there is no cyclic dependency on maprfs
#   log4j.logger.org.apache.hadoop.conf=INFO,console
#   log4j.additivity.org.apache.hadoop.conf=false
#   log4j.logger.org.apache.hadoop.fs=INFO,console
#   log4j.additivity.org.apache.hadoop.fs=false
#   log4j.logger.com.mapr=INFO,console
#   log4j.additivity.com.mapr=false

#
# Central TaskLog Appender
#
log4j.appender.maprfsTLA=com.mapr.log4j.MR1CentralTaskLogAppender
log4j.appender.maprfsTLA.URI=${maprfs.uri}
log4j.appender.maprfsTLA.layout=${log4j.appender.TLA.layout}
log4j.appender.maprfsTLA.layout.ConversionPattern=${log4j.appender.TLA.layout.ConversionPattern}
# log4j.appender.maprfsTLA.FailoverAppender=TLA
log4j.appender.maprfsTLA.ImmediateFlush=false
log4j.appender.maprfsTLA.ImmediateSync=false

#
# Central Daily Rolling File Appender
#
# log4j.appender.maprfsDRFA=com.mapr.log4j.MaprfsDailyRollingLogAppender
# log4j.appender.maprfsDRFA.URI=${maprfs.uri}
# log4j.appender.maprfsDRFA.File=mapred/${hadoop.log.file}
# # log4j.appender.maprfsDRFA.FailoverAppender=console
# log4j.appender.maprfsDRFA.ImmediateFlush=false
# log4j.appender.maprfsDRFA.ImmediateSync=false
# 
# # Rollver at midnight
# log4j.appender.maprfsDRFA.DatePattern=${log4j.appender.DRFA.DatePattern}
# log4j.appender.maprfsDRFA.layout=${log4j.appender.DRFA.layout}
# # Pattern format: Date LogLevel LoggerName LogMessage
# log4j.appender.maprfsDRFA.layout.ConversionPattern=${log4j.appender.DRFA.layout.ConversionPattern}
# # Debugging Pattern format
# #log4j.appender.maprfsDRFA.layout.ConversionPattern=${log4j.appender.DRFA.layout.ConversionPattern}
#
#  Initially we are not enabling Central Logging for daemons
#
log4j.appender.maprfsDRFA=org.apache.log4j.DailyRollingFileAppender
log4j.appender.maprfsDRFA.File=${hadoop.log.dir}/${hadoop.log.file}
log4j.appender.maprfsDRFA.DatePattern=.yyyy-MM-dd
log4j.appender.maprfsDRFA.layout=org.apache.log4j.PatternLayout
log4j.appender.maprfsDRFA.layout.ConversionPattern=%d{ISO8601} %p %c{2} [%t]: %m%n

########################################################################
# JT and TT Diagnostics logger.

# The value for log level is set in hadoop script. If we set it here, then it causes
# log4j initialization error messages when hadoop job is run. This is because this file
# is also used by hadoop CLI and it tries to create the target log file and fails because
# the user does not have permission to create the log file. Only mapr user can create
# files in logs directory.
log4j.logger.org.apache.hadoop.mapred.event.JTDiagnosticsLogger=${jt.diagnostics.level}
log4j.logger.org.apache.hadoop.mapred.event.TTDiagnosticsLogger=${tt.diagnostics.level}

# Don't send the logs from these classes to any other appenders
log4j.additivity.org.apache.hadoop.mapred.event.JTDiagnosticsLogger=false
log4j.additivity.org.apache.hadoop.mapred.event.TTDiagnosticsLogger=false

log4j.appender.JT_DIAGNOSTICS=org.apache.log4j.FileAppender
log4j.appender.JT_DIAGNOSTICS.File=${hadoop.log.dir}/jt_diagnostics.log
log4j.appender.JT_DIAGNOSTICS.layout=org.apache.log4j.PatternLayout
log4j.appender.JT_DIAGNOSTICS.layout.ConversionPattern=%m%n

log4j.appender.TT_DIAGNOSTICS=org.apache.log4j.FileAppender
log4j.appender.TT_DIAGNOSTICS.File=${hadoop.log.dir}/tt_diagnostics.log
log4j.appender.TT_DIAGNOSTICS.layout=org.apache.log4j.PatternLayout
log4j.appender.TT_DIAGNOSTICS.layout.ConversionPattern=%m%n
########################################################################
